services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka1:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka1
    depends_on: [zookeeper]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas.conf"
    volumes:
      - kafka1-data:/var/lib/kafka/data
      - ./jaas.conf:/etc/kafka/jaas.conf:ro
    ports:
      - "9092:9092"
    restart: unless-stopped

  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka2
    depends_on: [zookeeper]
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas.conf"
    volumes:
      - kafka2-data:/var/lib/kafka/data
      - ./jaas.conf:/etc/kafka/jaas.conf:ro
    ports:
      - "9093:9092"
    restart: unless-stopped

  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka3
    depends_on: [zookeeper]
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas.conf"
    volumes:
      - kafka3-data:/var/lib/kafka/data
      - ./jaas.conf:/etc/kafka/jaas.conf:ro
    ports:
      - "9094:9092"
    restart: unless-stopped

  akhq:
    image: tchiotludo/akhq:latest
    depends_on: [kafka1, kafka2, kafka3]
    environment:
      AKHQ_CONNECTIONS_default_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      AKHQ_CONNECTIONS_default_PROPERTIES_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
      AKHQ_CONNECTIONS_default_PROPERTIES_SASL_MECHANISM: "PLAIN"
      AKHQ_CONNECTIONS_default_PROPERTIES_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="akhq" password="akhq-secret";'
      AKHQ_SECURITY_PROVIDERS: "basic"
      AKHQ_SECURITY_BASIC_USERS_0: "akhq:akhq-secret"
      AKHQ_SECURITY_BASIC_USERS_0_GROUPS: "admin"
    ports:
      - "8080:8080"
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:7.16.2
    depends_on: [kafka1, kafka2, kafka3]
    volumes:
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    restart: unless-stopped
  # ——— Create the topic automatically ———
  topic-init:
    image: confluentinc/cp-kafka:7.2.1
    depends_on: [kafka1]
    entrypoint: >
      bash -c "
        for i in {1..10}; do
          kafka-topics --bootstrap-server kafka1:9092 --list && break || sleep 5;
        done;
        kafka-topics --bootstrap-server kafka1:9092 \
          --create --topic my-topic \
          --partitions 1 --replication-factor 3 \
          --config min.insync.replicas=2 \
          --if-not-exists
      "
    restart: "no"

  producer:
    image: python:3.9-slim
    depends_on: [topic-init]
    working_dir: /app
    volumes:
      - ./python/producer.py:/app/producer.py:ro
    entrypoint: >
      bash -c "
        pip install kafka-python &&
        python producer.py
      "

  consumer:
    image: python:3.9-slim
    depends_on: [topic-init]
    working_dir: /app
    volumes:
      - ./python/consumer.py:/app/consumer.py:ro
    entrypoint: >
      bash -c "
        pip install kafka-python &&
        python consumer.py
      "
    restart: unless-stopped

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka1-data:
  kafka2-data:
  kafka3-data: